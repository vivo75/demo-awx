---
# ansible-playbook -v -i inventory.yml -e @secrets.yml.enc --vault-password-file password_file install-nginx.yml

- hosts: nginx
  gather_facts: yes
  become: true
  vars_files:
    - vars.yml
  tasks:
    - name: Update system
      ansible.builtin.apt:
        name: "*"
        state: latest
        update_cache: yes
    - name: Add packages
      ansible.builtin.apt:
        pkg:
        - nginx
        - nginx-full
        - python3-certbot-nginx

- hosts: nginx
  gather_facts: yes
  become: true
  vars_files:
    - vars.yml

  roles:
    - ansible-role-nginx

- hosts: nginx
  gather_facts: no
  become: true
  vars_files:
    - vars.yml
  tasks:

    - name: setup proxy cache
      ansible.builtin.lineinfile:
        path: /etc/nginx/nginx.conf
        search_string: '<FilesMatch ".php[45]?$">'
        insertafter: '[ \t]*error_log.*\n'
        line: '    proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=cache:30m max_size=250m;'

    - name: Install and enable the nginx virtualhost files on Deb based systems
      block:
        - name: Copy sites configuration
          template:
            src: "templates/nginx/{{ item }}.j2"
            dest: "/etc/nginx/sites-available/{{ item }}"
            owner: root
            group: root
            mode: 0644
          loop:
            - git.tshr.it
            - awx.tshr.it
          notify: Reload nginx

        - name: Enable the nginx virtualhosts
          file:
            src: '/etc/nginx/sites-available/{{ item }}'
            dest: '/etc/nginx/sites-enabled/{{ item }}'
            state: link
          loop:
            - git.tshr.it
            - awx.tshr.it
          notify: Reload nginx

        - name: Ensure we can use streams
          ansible.builtin.lineinfile:
            path: /etc/nginx/nginx.conf
            insertbefore: '^worker_processes'
            line: load_module /usr/lib/nginx/modules/ngx_stream_module.so;

        # TODO: create an include dir for streams
        - name: add Streams
          blockinfile:
            state: present
            insertafter: EOF
            dest: /etc/nginx/nginx.conf
            marker: "### add services ANSIBLE MANAGED BLOCK ###"
            block: |2

              stream {
                  log_format logs '$remote_addr - - [$time_local] $protocol $status $bytes_sent $bytes_received $session_time "$upstream_addr"';

                  access_log /var/log/nginx/access.log logs;

                  upstream K3s_api_server {
                      least_conn;
                      server 172.16.33.6:6443 max_fails=3 fail_timeout=2s;
                      server 172.16.34.6:6443 max_fails=3 fail_timeout=2s;
                  }
                  server {
                      listen 6443;
                      proxy_pass K3s_api_server;
                  }
              }
          notify: Reload nginx

      when: ansible_distribution_file_variety == "Debian"
      tags: [ 'nginx', 'virtualhost' ]

  handlers:
    - name: Reload nginx
      service: name=nginx state=reloaded

    - name: Restart nginx
      service: name=nginx state=restarted
